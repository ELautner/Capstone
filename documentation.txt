--- Classes:
/* 
CREATED:    C. Stanhope         JAN 4 2018

ClassName
In this “paragraph” you describe what the purpose of this class is and why it is needed. Just any general information the person should know reading this. (ex. This is an entity class created to interact with the “unit” table in the database.)

FIELDS:
public int ID - this is the ID of the thing
public string blah - this does stuff
None

METHODS:
public static int getThing(int blah) - this methods get a thing and returns it as an int
public static void blah() - this is a really brief description of this method
None
*/


--- Methods:

/* 
CREATED:    C. Stanhope         JAN 1 2018
MODIFIED:   A. Valberg          JAN 4 2018
  - Changed method signature
  - Added function to calculate some stuff
MODIFIED:     P. Chavez           FEB 12 2018
  - Fixed a problem

MethodName()
This is a sample documentation phrase. This method is super cool and does all the cool things a method should.

PARAMETERS:     
int careSiteID - the ID of the thing
String anotherVariable - the name of something

RETURNS: 
int - the unit ID
void

ODEV METHOD CALLS:
None

------- OR

UserManager.FindById()
MessageUserControl.ShowErrorMessage()
CareSiteController.GetCareSiteByCareSiteID()
DisplayAccessCodes()

----- NOTE: the class name goes before the method if the method exists in another file (class)
----- NOTE: Security classes, MessageUserControl, and ALL CONTROLLER CALLS should be documented as above.
------Note: upcase for first letter
*/ 

--- this might be helpful for the PageLoad() methods. Feel free to copy!

Page_Load()
Run on page load and is used to .......

PARAMETERS: 	
object sender - references the object that raised the Page_Load event
EventArgs e - optional class that may be passed that inherits from EventArgs (usually empty)

RETURNS: 
void


--- DTO documentation

/* 
CREATED:    H. L'Heureux        MAR 20 2018

SurveyAnswerDTO
Uses default "get" and "set" methods to access the ENTITY entity. The DTONAME is used to act as a layer of protection and avoids direct modification of database entities.

PROPERTIES: (generic get/set, no validation)
public int surveyid - the unique ID of the survey (primary key) (foreign key) 
public int questionid - the unique ID of the question (primary key) (foreign key)
public string historicalquestion - the question that was posed to the user at the time of response
public string answer - the response from the user
*/

--- Entity documentation

/* 
CREATED:    Generated by ADO.NET Entity Data Model      MAR 6 2018

survey
An entity that links to the survey entity in the MSS database.

PROPERTIES: (generic get/set, no validation)
public int surveyid - the unique ID of the survey (primary key)
public DateTime date - the date and time that the survey information was collected
public string age - the age range of the survey respondent
public string gender - the gender of the survey respondent
public string firstname - the first name of the survey respondent
public string lastname - the last name of the survey respondent
public string bednumber - the bed number of the survey respondent
public string phonenumber - the phone number of the survey respondent
public string preferredcontact - the preferred contact method of the survey respondent
public bool? contactedyn - whether a Survey Respondent has been contacted
public int respondenttypeid - the unique ID of the survey respondent's respondent type (foreign key) 
public int unitid - the unique ID of the survey respondent's unit (foreign key) 

ENTITY LINKS:
public virtual respondenttype respondenttype - a link to the respondenttype entity
public virtual unit unit - a link to the unit entity
public virtual ICollection<surveyanswer> surveyanswers - a link to the list of surveyanswers connected to the survey

CONSTRUCTORS:
public survey() - the survey constructor
*/
